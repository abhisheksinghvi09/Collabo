{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Projects\\\\Collabo\\\\client\\\\src\\\\components\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Client from \"./Client\";\nimport Editor from \"./Editor\";\nimport { initSocket } from \"../Socket\";\nimport { ACTIONS } from \"../Actions\";\nimport { useNavigate, useLocation, Navigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const codeRef = useRef(null);\n  const Location = useLocation();\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const init = async () => {\n      var _Location$state;\n      socketRef.current = await initSocket();\n      socketRef.current.on(\"connect_error\", err => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", err => handleErrors(err));\n      const handleErrors = err => {\n        console.log(\"Error\", err);\n        toast.error(\"Socket connection failed, Try again later\");\n        navigate(\"/\");\n      };\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_Location$state = Location.state) === null || _Location$state === void 0 ? void 0 : _Location$state.username\n      });\n\n      // Listen for new clients joining the chatroom\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _Location$state2;\n        // this insure that new user connected message do not display to that user itself\n        if (username !== ((_Location$state2 = Location.state) === null || _Location$state2 === void 0 ? void 0 : _Location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n        }\n        setClients(clients);\n        // also send the code to sync\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      });\n\n      // listening for disconnected\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n\n    // cleanup\n    return () => {\n      socketRef.current && socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n  if (!Location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  const copyRoomId = async () => {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(`roomIs is copied`);\n    } catch (error) {\n      console.log(error);\n      toast.error(\"unable to copy the room Id\");\n    }\n  };\n  const leaveRoom = async () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2 bg-dark text-light d-flex flex-column h-100\",\n        style: {\n          boxShadow: \"2px 0px 4px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/codecast.png\",\n          alt: \"Logo\",\n          className: \"img-fluid mx-auto\",\n          style: {\n            maxWidth: \"150px\",\n            marginTop: \"-43px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            marginTop: \"-3rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column flex-grow-1 overflow-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mb-2\",\n            children: \"Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-auto \",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: copyRoomId,\n            children: \"Copy Room ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mt-2 mb-2 px-3 btn-block\",\n            onClick: leaveRoom,\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 text-light d-flex flex-column h-100 \",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          socketRef: socketRef,\n          roomId: roomId,\n          onCodeChange: code => {\n            codeRef.current = code;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"z4Ufx/W85YgVa2DHNMTPZJ9dX7s=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initSocket","ACTIONS","useNavigate","useLocation","Navigate","useParams","toast","jsxDEV","_jsxDEV","EditorPage","_s","clients","setClients","codeRef","Location","navigate","roomId","socketRef","init","_Location$state","current","on","err","handleErrors","console","log","error","emit","JOIN","username","state","JOINED","socketId","_Location$state2","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","to","fileName","_jsxFileName","lineNumber","columnNumber","copyRoomId","navigator","clipboard","writeText","leaveRoom","className","children","style","boxShadow","src","alt","maxWidth","marginTop","map","onClick","onCodeChange","_c","$RefreshReg$"],"sources":["D:/Work/Projects/Collabo/client/src/components/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Client from \"./Client\";\r\nimport Editor from \"./Editor\";\r\nimport { initSocket } from \"../Socket\";\r\nimport { ACTIONS } from \"../Actions\";\r\nimport {\r\n  useNavigate,\r\n  useLocation,\r\n  Navigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nfunction EditorPage() {\r\n  const [clients, setClients] = useState([]);\r\n  const codeRef = useRef(null);\r\n\r\n  const Location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { roomId } = useParams();\r\n\r\n  const socketRef = useRef(null);\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      socketRef.current = await initSocket();\r\n      socketRef.current.on(\"connect_error\", (err) => handleErrors(err));\r\n      socketRef.current.on(\"connect_failed\", (err) => handleErrors(err));\r\n\r\n      const handleErrors = (err) => {\r\n        console.log(\"Error\", err);\r\n        toast.error(\"Socket connection failed, Try again later\");\r\n        navigate(\"/\");\r\n      };\r\n\r\n      socketRef.current.emit(ACTIONS.JOIN, {\r\n        roomId,\r\n        username: Location.state?.username,\r\n      });\r\n\r\n      // Listen for new clients joining the chatroom\r\n      socketRef.current.on(\r\n        ACTIONS.JOINED,\r\n        ({ clients, username, socketId }) => {\r\n          // this insure that new user connected message do not display to that user itself\r\n          if (username !== Location.state?.username) {\r\n            toast.success(`${username} joined the room.`);\r\n          }\r\n          setClients(clients);\r\n          // also send the code to sync\r\n          socketRef.current.emit(ACTIONS.SYNC_CODE, {\r\n            code: codeRef.current,\r\n            socketId,\r\n          });\r\n        }\r\n      );\r\n\r\n      // listening for disconnected\r\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\r\n        toast.success(`${username} left the room`);\r\n        setClients((prev) => {\r\n          return prev.filter((client) => client.socketId !== socketId);\r\n        });\r\n      });\r\n    };\r\n    init();\r\n\r\n    // cleanup\r\n    return () => {\r\n      socketRef.current && socketRef.current.disconnect();\r\n      socketRef.current.off(ACTIONS.JOINED);\r\n      socketRef.current.off(ACTIONS.DISCONNECTED);\r\n    };\r\n  }, []);\r\n\r\n  if (!Location.state) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  const copyRoomId = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(roomId);\r\n      toast.success(`roomIs is copied`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"unable to copy the room Id\");\r\n    }\r\n  };\r\n\r\n  const leaveRoom = async () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid vh-100\">\r\n      <div className=\"row h-100\">\r\n        {/* client panel */}\r\n        <div\r\n          className=\"col-md-2 bg-dark text-light d-flex flex-column h-100\"\r\n          style={{ boxShadow: \"2px 0px 4px rgba(0, 0, 0, 0.1)\" }}\r\n        >\r\n          <img\r\n            src=\"/images/codecast.png\"\r\n            alt=\"Logo\"\r\n            className=\"img-fluid mx-auto\"\r\n            style={{ maxWidth: \"150px\", marginTop: \"-43px\" }}\r\n          />\r\n          <hr style={{ marginTop: \"-3rem\" }} />\r\n\r\n          {/* Client list container */}\r\n          <div className=\"d-flex flex-column flex-grow-1 overflow-auto\">\r\n            <span className=\"mb-2\">Members</span>\r\n            {clients.map((client) => (\r\n              <Client key={client.socketId} username={client.username} />\r\n            ))}\r\n          </div>\r\n\r\n          <hr />\r\n          {/* Buttons */}\r\n          <div className=\"mt-auto \">\r\n            <button className=\"btn btn-success\" onClick={copyRoomId}>\r\n              Copy Room ID\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger mt-2 mb-2 px-3 btn-block\"\r\n              onClick={leaveRoom}\r\n            >\r\n              Leave Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Editor panel */}\r\n        <div className=\"col-md-10 text-light d-flex flex-column h-100 \">\r\n          <Editor\r\n            socketRef={socketRef}\r\n            roomId={roomId}\r\n            onCodeChange={(code) => {\r\n              codeRef.current = code;\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}